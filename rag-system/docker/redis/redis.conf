# Redis 配置文件 - 生产环境
# 适用于RAG系统的Redis配置

################################## 网络配置 ##################################

# 绑定地址，0.0.0.0允许所有接口访问
bind 0.0.0.0

# 监听端口
port 6379

# 保护模式，在生产环境中应该启用
protected-mode yes

# TCP监听队列长度
tcp-backlog 511

# 客户端空闲超时时间（秒）
timeout 300

# TCP keepalive
tcp-keepalive 300

################################## 通用配置 ##################################

# 是否以守护进程方式运行
daemonize no

# 进程ID文件
pidfile /var/run/redis_6379.pid

# 日志级别：debug, verbose, notice, warning
loglevel notice

# 日志文件，空字符串表示标准输出
logfile ""

# 数据库数量
databases 16

# 显示Redis logo
always-show-logo no

# 设置服务器verbosity为'verbose'
set-proc-title yes
proc-title-template "{title} {listen-addr} {server-mode}"

################################## 内存管理 ##################################

# 最大内存限制
maxmemory 512mb

# 内存淘汰策略
# allkeys-lru: 在所有键中使用LRU算法删除
# volatile-lru: 在设置了过期时间的键中使用LRU算法删除
# allkeys-lfu: 在所有键中使用LFU算法删除
# volatile-lfu: 在设置了过期时间的键中使用LFU算法删除
# allkeys-random: 随机删除所有键
# volatile-random: 随机删除设置了过期时间的键
# volatile-ttl: 删除即将过期的键
# noeviction: 不删除键，返回错误
maxmemory-policy allkeys-lru

# LRU和LFU算法的样本大小
maxmemory-samples 5

# 副本忽略最大内存限制
replica-ignore-maxmemory yes

################################## 持久化配置 ##################################

# RDB持久化配置
# save <seconds> <changes>
# 在指定时间内，如果至少有指定数量的键发生变化，则保存数据库
save 900 1      # 900秒内至少1个键发生变化
save 300 10     # 300秒内至少10个键发生变化
save 60 10000   # 60秒内至少10000个键发生变化

# 当RDB持久化出现错误时，是否停止写入
stop-writes-on-bgsave-error yes

# 是否压缩RDB文件
rdbcompression yes

# 是否校验RDB文件
rdbchecksum yes

# RDB文件名
dbfilename dump.rdb

# RDB和AOF文件的目录
dir /data

################################## AOF配置 ##################################

# 是否启用AOF持久化
appendonly yes

# AOF文件名
appendfilename "appendonly.aof"

# AOF同步策略
# always: 每个写命令都同步
# everysec: 每秒同步一次（推荐）
# no: 由操作系统决定何时同步
appendfsync everysec

# 在重写AOF文件时，是否停止同步
no-appendfsync-on-rewrite no

# AOF重写触发条件
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# AOF文件损坏时的处理方式
aof-load-truncated yes

# 是否使用RDB-AOF混合持久化
aof-use-rdb-preamble yes

################################## 慢查询日志 ##################################

# 慢查询阈值（微秒）
slowlog-log-slower-than 10000

# 慢查询日志最大长度
slowlog-max-len 128

################################## 延迟监控 ##################################

# 延迟监控阈值（毫秒）
latency-monitor-threshold 100

################################## 事件通知 ##################################

# 键空间通知配置
# K: 键空间通知，所有通知以__keyspace@<db>__为前缀
# E: 键事件通知，所有通知以__keyevent@<db>__为前缀
# g: DEL、EXPIRE、RENAME等类型无关的通用命令的通知
# $: 字符串命令的通知
# l: 列表命令的通知
# s: 集合命令的通知
# h: 哈希命令的通知
# z: 有序集合命令的通知
# x: 过期事件（每次key过期时生成）
# e: 驱逐事件（当key因为maxmemory被驱逐时生成）
# t: Stream命令的通知
# d: 模块键类型事件
# m: Key-miss事件（当访问不存在的键时生成）
# A: g$lshzxetd的别名，因此"AKE"意味着所有的事件
notify-keyspace-events ""

################################## 高级配置 ##################################

# 哈希表在达到指定大小时使用更节省内存的编码
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# 列表压缩配置
list-max-ziplist-size -2
list-compress-depth 0

# 集合在达到指定大小时使用更节省内存的编码
set-max-intset-entries 512

# 有序集合压缩配置
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog稀疏表示限制
hll-sparse-max-bytes 3000

# Stream宏节点的最大字节数和项目数
stream-node-max-bytes 4096
stream-node-max-entries 100

# 活跃重新哈希
activerehashing yes

# 客户端输出缓冲区限制
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# 客户端查询缓冲区限制
client-query-buffer-limit 1gb

# 协议缓冲区限制
proto-max-bulk-len 512mb

# 频率计数器
hz 10

# 启用动态频率调整
dynamic-hz yes

# AOF重写时是否启用增量同步
aof-rewrite-incremental-fsync yes

# RDB保存时是否启用增量同步
rdb-save-incremental-fsync yes

# JEMalloc后台线程
jemalloc-bg-thread yes

################################## 安全配置 ##################################

# 设置密码（生产环境建议启用）
# requirepass your_password_here

# 重命名危险命令
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG "CONFIG_b835b8c3f1c5e5c8e5d5f5e5c8e5d5f5"

################################## 模块配置 ##################################

# 加载模块
# loadmodule /path/to/my_module.so

################################## 集群配置 ##################################

# 启用集群模式（如果需要）
# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-replica-validity-factor 10
# cluster-migration-barrier 1
# cluster-require-full-coverage yes