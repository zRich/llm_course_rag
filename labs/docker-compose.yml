# RAG 实验基础服务配置
# 
# 此 docker-compose.yml 文件仅用于启动 RAG 实验所需的基础服务：
# - PostgreSQL: 关系型数据库，用于存储应用数据
# - Redis: 缓存服务，用于提高查询性能
# - Qdrant: 向量数据库，用于存储和检索文档嵌入向量
#
# 注意：RAG 应用本身不在此容器中运行，需要在宿主机上单独启动
# 启动命令：cd full/lab01 && python3 scripts/run_with_uv.py server --reload

version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:17.5-bookworm
    container_name: rag_postgres
    environment:
      POSTGRES_DB: rag_db
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rag_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: rag_redis
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rag_network

  # Qdrant向量数据库
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rag_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  rag_network:
    driver: bridge